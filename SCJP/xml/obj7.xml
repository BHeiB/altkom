<?xml version="1.0" encoding="UTF-8"?>

<obj xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:noNamespaceSchemaLocation="resources/pytania.xsd"
 >
 
    <pyt>
        <nr>1</nr>
        <tresc><![CDATA[What value is printed out by executing the following code?
        
        class MyClass
        {
        	public static void main(String[] args)
        	{
        		double d = 2.7;
        		Box b = new Box();
        		b.doMinus(d);
        		System.out.println(d);
        	}
        }
        class Box
        {
        	public double d;
        	pubilc void doMinus(double d)
        	{
        		d = d - 1.0;
        	}
        }
		]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>2.7</odp>
		<odp>1.7</odp>
		<odp>0.0</odp>
		<odp>-1.0</odp>
        <poprawne>1</poprawne>
    </pyt>
    <pyt>
        <nr>2</nr>
        <tresc><![CDATA[Given the following main method in a class called Cycle and a command line as shown below:
        
        java Cycle one two
        
        What will be the output?
        
        class Cycle {
        public static void main(String[] bicycle) 
        {
        	System.out.println(bicycle[0]);
        }
        }
        ]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>Compiler error</odp>
		<odp>Prints "Cycle"</odp>
		<odp>Prints "one"</odp>
		<odp>Prints "two"</odp>
        <poprawne>3</poprawne>
    </pyt>
    <pyt>
        <nr>3</nr>
        <tresc><![CDATA[Which of the following access are illegal for the getMe() method in class B?
        
        class A{
        void getMe(){}
        }
        
        class B extends A{
        	void getMe(){}
        }
        ]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>public</odp>
		<odp>protected</odp>
		<odp>private</odp>
		<odp>default</odp>
        <poprawne>3</poprawne>
    </pyt>
    <pyt>
        <nr>4</nr>
        <tresc><![CDATA[Given the class CommandLineTest
        
        class CommandLineTest{
        	public static void main(String[] args) {
        		System.out.print(_____);
        	}
        }
        Which of the following expressions can be passed to the print method to output 2, if you execute the class using the following command
        
        java -cp . CommandLineTest 3 "+" 2 "="5
        ]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>args[0]</odp>
		<odp>args[1]</odp>
		<odp>args[2]</odp>
		<odp>args[3]</odp>
		<odp>None of these</odp>
        <poprawne>3</poprawne>
    </pyt>
    <pyt>
        <nr>5</nr>
        <tresc><![CDATA[Which of the following modifiers can be applied to a top-level class (i.e. a class which is not enclosed in another class)?]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp>private</odp>
		<odp>protected</odp>
		<odp>transient</odp>
		<odp>public</odp>
		<odp>final</odp>
        <poprawne>4,5</poprawne>
    </pyt>
    <pyt>
        <nr>6</nr>
        <tresc><![CDATA[Which of the following statements are true?]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp>As soon as the reference count for an object reaches zero, it will be immediately garbage collected</odp>
		<odp>The finalize() method will not be invoked more than once on the same object</odp>
		<odp>The finalize() method cannot be overloaded</odp>
		<odp>The garbage collection implementation is JVM-dependent</odp>
		<odp>If the finalize() method is overriden, a call to the super class's finalize() method is inserted automatically by the compiler</odp>
        <poprawne>2,4</poprawne>
    </pyt>
    <pyt>
        <nr>7</nr>
        <tresc><![CDATA[What will be printed out to the standart output if the following class is executed using the command "java Test 1 two 3" ?
        
        public class Test
        {
        	static public void main(String[] args)
        	{
        		try
        		{
        			int k = Integer.parseInt(args[1]);
        			System.out.println(args[k]);
        		}
        		catch (Exception e)
        		{
        			System.out.println(e);
        		}
        	}
        }
        ]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>1</odp>
		<odp>two</odp>
		<odp>NumberFormatException</odp>
		<odp>ArrayIndexOutOfBounds</odp>
		<odp>Code does not compile</odp>
        <poprawne>3</poprawne>
    </pyt>
    <pyt>
        <nr>8</nr>
        <tresc><![CDATA[What is the result of compiling and running the following code?
        
        abstract class Test{
        	void test(){System.out.println("Super");}
        }
        protected class SubTest extends Test{
        	void test(){System.out.println("Sub");}
        }
        public class AccessTest{
        	public static void main(String[] args) {
        		Test t = new SubTest();
        		t.test();
        	}
        }
        ]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
		<odp>Compiler error: Abstract class Test must contain at least one abstract method</odp>
		<odp>Prints "Super"</odp>
		<odp>Prints "Sub"</odp>
		<odp>None of these</odp>
        <poprawne>4</poprawne>
    </pyt>
    <pyt>
        <nr>9</nr>
        <tresc><![CDATA[What will be writen to standard output when the following program is executed?
        
        public class Test{
        	int a;
        	int b;
        	public void f() {
        		a = 0;
        		b = 0;
        		int[] c = { 0 };
        		g(b,c);
        		System.out.println(a + " " + b + " " + c[0] + " ");
        	}
        	public void g(int b, int[] c) {
        		a = 1;
        		b = 1;
        		c[0] = 1;
        	}
        	public static void main(String[] args) {
        		Test  obj = new Test();
        		obj.f();
        	}
        }
        ]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>0 0 0</odp>
		<odp>0 0 1</odp>
		<odp>0 1 0</odp>
		<odp>1 0 0</odp>
		<odp>1 0 1</odp>
        <poprawne>5</poprawne>
    </pyt>
    <pyt>
        <nr>10</nr>
        <tresc><![CDATA[What is the result of compiling and executing this code?
        
        class PassTest {int i=3; }
        	public class Test{
        		public static void xx(PassTest p) {
					p.i = 10;
        		}
        		public static void yy(PassTest p) {
					p = new PassTest();
        		}
        		public static void main(String[] args) {
        			PassTest passTest = new PassTest();
        			xx(passTest);
        			System.out.println(passTest.i);
        			yy(passTest);
        			System.out.println(passTest.i);
        		}
        	}
        ]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>Does not compile</odp>
		<odp>Prints 3 10</odp>
		<odp>Prints 3 3</odp>
		<odp>Prints 10 10</odp>
		<odp>Prints 10 3</odp>
        <poprawne>4</poprawne>
    </pyt>
    <pyt>
        <nr>11</nr>
        <tresc><![CDATA[Assume that MyClass is a class which defines two methods f() and g().
        How many object would be eligible for garbage collection by the time the method gc() is invoked()?
        
        MyClass c1 = new MyClass();
        MyClass c2 = new MyClass();
        f(c1);
        c1 = null;
        c2 = c1;
        g();
        ]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
		<odp>1</odp>
		<odp>2</odp>
		<odp>0</odp>
		<odp>The given information is insufficient</odp>
        <poprawne>4</poprawne>
    </pyt>
    <pyt>
        <nr>12</nr>
        <tresc><![CDATA[What will be the result of an attempt to compile and run the following code?
        
        class Test{
        	final int x;
        	int y = 5;
        	
        	Test(int i)
        	{
     			y = x+i;
     		}
     		public static void main(String[] args)
     		{
     			Test t = new Test(10);
     			System.out.println(t.y);
     		}
     	}
        ]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
		<odp>Code does not compile</odp>
		<odp>Prints 10</odp>
		<odp>Prints 5</odp>
		<odp>None of the above</odp>
        <poprawne>1</poprawne>
    </pyt>
    <pyt>
        <nr>13</nr>
        <tresc><![CDATA[Given the code below, which access modifiers (public, protected, or private) can legally be placed before the myMethod() method on line 3, if no other changes are made to the code? If line 3 is left as it is, which keywords can legally be placed before the myMethod() method on line 8?
        
        1.  class HumptyDumpty
        2.  {
        3.  	void myMethod() {}
        4. 	}
        5. 
        6.  class HankyPanky extends HumptyDumpty
        7.  {
        8. 		void myMethod() {}
        9.  }
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
		<odp>private or nothing (default) on line 3. Nothing (default) or protected or public on line 8</odp>
		<odp>public or protected on line 3. private or nothing on line 8</odp>
		<odp>Nothing (default) or protected on line 3. private or nothing (default) on line 8</odp>
		<odp>public on line 3 and private on line 8</odp>
        <poprawne>1</poprawne>
    </pyt>
    <pyt>
        <nr>14</nr>
        <tresc><![CDATA[What will be the result of compiling the following program executing it using the following command - java Child?
        
        Parent.java
        -----------
        package p;
        public class Parent
        {
        protected int x=9;
        }
        
        Child.java
        ----------
        package other;
        import p.*;
        1.  class Child extends Parent
        2.  {
        3.  	public static void main(String[] args)
        4.  	{	
        5.  		p.Parent p = new p.Parent();
        6.  		System.out.println(p.x);
        7.  	}
        8.  }
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
		<odp>Prints 9</odp>
		<odp>Compilier error at line 5</odp>
		<odp>Compilier error at line 6</odp>
		<odp>None of the above</odp>
        <poprawne>3</poprawne>
    </pyt>
    <pyt>
        <nr>15</nr>
        <tresc><![CDATA[Given the following two classes, which statement is true?
        
        package pack;
        
        public class Parent{
        	protected void test(){
        		Sytem.out.println("Test");
        	}
        }
        
        1. package mypack;
        2. import pack.*;
        3. class ParentTest extends Parent{
        4. 	public static void main(String[] args) {
        5. 		new ParentTest().test();
        6. 		new Parent().test();
        7. 	}
        8. }
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>The code will compile and run only if line 5 is removed</odp>
		<odp>The code will compile and run only if line 6 is removed</odp>
		<odp>The code compiles and runs, printing "Test" twice</odp>
		<odp>The code compiles but throws an exception at runtime</odp>
        <poprawne>2</poprawne>
    </pyt>
    <pyt>
        <nr>16</nr>
        <tresc><![CDATA[Given the following
        
        package p1;
        
        pubilc class Fruit {
        	protected String taste;
        	protected void changeColor(){}
        }
        
        package p2;
        
        public class Apple extends Fruit {?}
        
        Which of the following maybe legally inserted inside Apple?
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp>protected int changeColor(){}</odp>
		<odp><![CDATA[{
		teste = "sweet";
		}]]></odp>
		<odp><![CDATA[void changeColor(){}]]></odp>
		<odp><![CDATA[{
		(new Fruit()).taste = "sweet";
		}]]></odp>
		<odp><![CDATA[protected void changeColor() throws RuntimeException]]></odp>
        <poprawne>2,5</poprawne>
    </pyt>    
    <pyt>
        <nr>17</nr>
        <tresc><![CDATA[What will be the output when you compile and execute the following program?
        
        class Test {
		        public static void main(String[] args) {
		        Boolean b1 = true;
		        boolean b2 = false;
		        System.out.println(!b1 ^ b2);
		        System.out.println(b1 & (b2 = true));
		        System.out.println(b2 && (b1 | b2));
			}
		}
        ]]></tresc>        
        <level>1</level>
        <liczba_odpowiedzi>6</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>truetruetrue</odp>
		<odp>falsetruetrue</odp>
		<odp>falsefalsefalse</odp>
		<odp>truetruefalse</odp>
		<odp>truefalsetrue</odp>
		<odp>Code does not compile</odp>
        <poprawne>2</poprawne>
    </pyt>
    <pyt>
        <nr>18</nr>
        <tresc><![CDATA[Which of the following operators will always evaluate all the operands?
        ]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp>||</odp>
		<odp>+</odp>
		<odp><![CDATA[&&]]></odp>
		<odp>?:</odp>
		<odp>%</odp>
        <poprawne>2,5</poprawne>
    </pyt>
    <pyt>
        <nr>19</nr>
        <tresc><![CDATA[What will be the result of running the following code?
        
	public class Short
    {
        public static void main(String[] args)
        {
        	int a = 0;
        	StringBuffer s = new StringBuffer("Hello");
        	if ((s.length() < 10 | (s.append(" world").equals("Well done")))
        	;	// do nothing
        	System.out.println("Value is - " + s);
        }
	}
        ]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>The output: Value is - Hello</odp>
		<odp>The output: Value is - Hello world</odp>
		<odp>A compiler error</odp>
		<odp>No output</odp>
		<odp>An exception</odp>
        <poprawne>2</poprawne>
    </pyt>
    <pyt>
        <nr>20</nr>
        <tresc><![CDATA[What results from running the code below?
        
        int a = -5; int b = -2;
        System.out.println(a % b);
        ]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
		<odp>0</odp>
		<odp>1</odp>
		<odp>-1</odp>
		<odp>A compiler error saying "%" operator is not valid for negative numbers</odp>
        <poprawne>3</poprawne>
    </pyt>
    <pyt>
        <nr>21</nr>
        <tresc><![CDATA[The following line of code is equivalent to which of the given codes?
        
        if (x>y)
        z = x;
        else
        x = y;
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[z = x < y ? x : y]]></odp>
		<odp><![CDATA[z = x < y ? y : x]]></odp>
		<odp><![CDATA[z = y < x ? x : y]]></odp>
		<odp><![CDATA[z = y < x ? y : x]]></odp>
		<odp>None of the above</odp>
        <poprawne>5</poprawne>
    </pyt>
    <pyt>
        <nr>22</nr>
        <tresc><![CDATA[What is the output produced by the following code?
        
        class OpTest1{
        	public static void main(String[] args){
        		int a = -5; int b = -2;
        		a%=b;
        		a/=b;
        		b=a>0 ? 0 : a;
        		System.out.println(a + " " + b);
        	}
        }
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>1 0</odp>
		<odp>-1 -1</odp>
		<odp>-2 -2</odp>
		<odp>0 0</odp>
        <poprawne>4</poprawne>
    </pyt>
    <pyt>
        <nr>23</nr>
        <tresc><![CDATA[What will happen if you compile and run the following code?
        
        public class MyClass
        {
        	public static void main(String[] args)
        	{
        		int i = 10;
        		int j = 10;
        		boolean b = false;
        		if (b = i == j)
        			System.out.println("True");
        		else
        			System.out.println("False");
        	}
        }
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>Compilation error</odp>
		<odp>Throws an exception</odp>
		<odp>Prints "True"</odp>
		<odp>Prints "False"</odp>
        <poprawne>3</poprawne>
    </pyt>
    <pyt>
        <nr>24</nr>
        <tresc><![CDATA[Which of the following statements are true?]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>3</liczba_poprawnych>
        <odp>The finalize method is invoked by the JVM at most once in the life time of object</odp>
		<odp>If the finalize method is overridden, the JVM will definitely invoke it</odp>
		<odp>Exceptions thrown by the finalize method are ignored by the garbage collector</odp>
		<odp>Calling System.gc() will definitely call the finalize() method</odp>
		<odp>The finalize method may throw checked exceptions</odp>
        <poprawne>1,3,5</poprawne>
    </pyt>
    <pyt>
        <nr>25</nr>
        <tresc><![CDATA[Which option is true about compiling and running the following code?
        
        class SuperTest {
        	protected void finalize() {
        		super.finalize();			// 1
        		System.out.println("SuperTest");
        	}
        }
        
        public class Test extends SuperTest {
        	String s = "abc";
        	
        	public static void main(String[] args) {
        		Test t = new Test();		// 2
        		t.finalize();				// 3
        	}
        }
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>6</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp>Code will compile only if line 1 is removed</odp>
        <odp>Code will compile only if line 3 is removed</odp>
		<odp>Prints "SuperTest"</odp>
		<odp>Prints "SuperTest" only if garbage collector runs</odp>
		<odp>Causes an exception to be thrown at runtime</odp>
		<odp>None of the above</odp>
        <poprawne>1</poprawne>
    </pyt>
    <pyt>
        <nr>26</nr>
        <tresc><![CDATA[Which of the following statements is true about Garbage Collection?]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
		<odp>It is possible to turn off Garbage Collection completely</odp>
		<odp>An object is garbage collected as soon as it is eligible for garbage collection, only if it calls System.gc() from its finalize method</odp>
		<odp>Under low memory conditions, OutOfMemoryError will be thrown only if there is not enough memory even after running the garbage collector</odp>
		<odp>Objects of anonymous inner classes are not garbage collected</odp>
        <poprawne>3</poprawne>
    </pyt>
</obj>


<?xml version="1.0" encoding="UTF-8"?>

<obj xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:noNamespaceSchemaLocation="resources/pytania.xsd"
 >
    <pyt>
        <nr>1</nr>
        <tresc><![CDATA[Which of these will compile and run?]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp><![CDATA[LinkedList&lt;Integer&gt; I = new LinkedList&lt;int&gt;();]]></odp>
		<odp><![CDATA[List&lt;Number&gt; I = new LinkedList&lt;Number&gt;();]]></odp>
		<odp><![CDATA[LinkedList&lt;Integer&gt; I = new LinkedList();]]></odp>
		<odp><![CDATA[LinkedList&lt;Integer&gt; I = new &lt;Integer&gt;LinkedList();]]></odp>
		<odp><![CDATA[List&lt;Number&gt; I = new LinkedList&lt;Integer&gt;();]]></odp>
        <poprawne>2,3</poprawne>
    </pyt>
    <pyt>
        <nr>2</nr>
        <tresc><![CDATA[Which of the following statements are true about a Map object?]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
		<odp><![CDATA[It cannot be assigned to a reference variable of type Collection]]></odp>
		<odp><![CDATA[It maps unique keys to unique values]]></odp>
		<odp><![CDATA[It maps unique keys to non-unique values]]></odp>
		<odp><![CDATA[It can be interated using MapIterator]]></odp>
        <poprawne>1,3</poprawne>
    </pyt>
    <pyt>
        <nr>3</nr>
        <tresc><![CDATA[Which of the following methods are defined in the java.util.Arrays class?]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp><![CDATA[asList]]></odp>
		<odp><![CDATA[toList]]></odp>
		<odp><![CDATA[toArray]]></odp>
		<odp><![CDATA[search]]></odp>
		<odp><![CDATA[sort]]></odp>
        <poprawne>1,5</poprawne>
    </pyt>
    <pyt>
        <nr>4</nr>
        <tresc><![CDATA[Which method of a Queue removes an element if the Queue is not empty, but throws an exception if the Queue is empty?]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[pool]]></odp>
		<odp><![CDATA[peek]]></odp>
		<odp><![CDATA[remove]]></odp>
		<odp><![CDATA[delete]]></odp>
        <poprawne>3</poprawne>
    </pyt>
    <pyt>
        <nr>5</nr>
        <tresc><![CDATA[Which interface defines the int compare(Object, Object) method?]]></tresc>
        <level>1</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[Comparator]]></odp>
		<odp><![CDATA[Comparable]]></odp>
		<odp><![CDATA[SortedSet]]></odp>
		<odp><![CDATA[TreeMap]]></odp>
        <poprawne>1</poprawne>
    </pyt>
    <pyt>
        <nr>6</nr>
        <tresc><![CDATA[What is the result of compiling and running the following code?
        
        import java.util.*;
        
        class Collection1 {
        	public static void main(String[] args){
        		Set<String> s = new HashSet<String>();
        		s.add("apple");
        		s.add("Apple");
        		s.add("1");
        		s.add("1.0");
        		String[] ss = s.toArray();
        		for (String str : ss)
        			System.out.println(str);
        	}
        }
        ]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[Compiler error]]></odp>
		<odp><![CDATA[Exception]]></odp>
		<odp><![CDATA[Prints all 4 strings]]></odp>
		<odp><![CDATA[Prints "apple", "1" and "1.0"]]></odp>
        <poprawne>1</poprawne>
    </pyt>
    <pyt>
        <nr>7</nr>
        <tresc><![CDATA[Which of the following statements are true?]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp><![CDATA[Just like classes, interfaces may also be generic]]></odp>
		<odp><![CDATA[Generic methods can be static or non-static]]></odp>
		<odp><![CDATA[Only generic class can have a generic constructor]]></odp>
		<odp><![CDATA[Only generic class can have a generic method]]></odp>
        <poprawne>1,2</poprawne>
    </pyt>
    <pyt>
        <nr>8</nr>
        <tresc><![CDATA[Which of the following is a valid declaration of a generic method?]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[public static &lt;X, Y extends X&gt; boolean isPresent(X x, Y[] y){}]]></odp>
		<odp><![CDATA[public &lt;X, Y extends X&gt; static boolean isPresent(X x, Y[] y){}]]></odp>
		<odp><![CDATA[public static boolean &lt;X, Y extends X&gt; isPresent(X x, Y[] y){}]]></odp>
		<odp><![CDATA[None of these]]></odp>
        <poprawne>1</poprawne>
    </pyt>
    <pyt>
        <nr>9</nr>
        <tresc><![CDATA[Which of the following may take a Comparator as argument to control sorting order?]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp><![CDATA[Collections.sort() method]]></odp>
		<odp><![CDATA[Collection.sort() method]]></odp>
		<odp><![CDATA[The TreeSet constructor]]></odp>
		<odp><![CDATA[Arrays.sortAll() method]]></odp>
        <poprawne>1,3</poprawne>
    </pyt>
    <pyt>
        <nr>10</nr>
        <tresc><![CDATA[Which Java collection class can be used to maintain the entries in the order in which they were last accessed?]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[java.util.HashSet]]></odp>
		<odp><![CDATA[java.util.LinkedHashMap]]></odp>
		<odp><![CDATA[java.util.Hashtable]]></odp>
		<odp><![CDATA[java.util.Vector]]></odp>
		<odp><![CDATA[None of these]]></odp>
        <poprawne>2</poprawne>
    </pyt>
    <pyt>
        <nr>11</nr>
        <tresc><![CDATA[What is the result of compiling and running the following code?
        
        import java.util.*;
     		public class TestSet
     		{
     			public static void main(String[] args)
     			{
     				Collection<String> set = new TreeSet<String>();
     				set.add("Java");
     				set.add("XML");
     				set.add("Swing");
     				set.add("JSP");
     				set.add("Java");
     				for (Object o : set) 
     				{	
     					System.out.print(o + " ");
     				}
     			}
     		}
     	]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>6</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[Does not compile]]></odp>
		<odp><![CDATA[Throws ClassCastException]]></odp>
		<odp><![CDATA[Prints "Java XML Swing JSP"]]></odp>
		<odp><![CDATA[Prints "Java XML Swing JSP Java"]]></odp>
		<odp><![CDATA[Prints "JSP Java Swing XML"]]></odp>
		<odp><![CDATA[Prints "Java JSP Swing XML"]]></odp>
        <poprawne>5</poprawne>
    </pyt>
    <pyt>
        <nr>12</nr>
        <tresc><![CDATA[Which of the following statements are true about the HashMap and Hashtable classes?]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp><![CDATA[A HashMap is synchronized, while a Hashtable is not]]></odp>
		<odp><![CDATA[A Hashtable is synchronized, while a HashMap is not]]></odp>
		<odp><![CDATA[A HashMap can have null values, but not null keys]]></odp>
		<odp><![CDATA[A Hashtable cannot have null values or null keys]]></odp>
		<odp><![CDATA[A Hashtable maintains object references in the order in which they were added, while the HashMap does not]]></odp>
        <poprawne>2,4</poprawne>
    </pyt>
    <pyt>
        <nr>13</nr>
        <tresc><![CDATA[If an instance of a class needs to be added to a TreeSet, which interface this class must implement?
        (Assume that the TreeSet is instantiated with the default no-argument constructor)]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[java.util.SortedSet]]></odp>
		<odp><![CDATA[java.lang.Clonable]]></odp>
		<odp><![CDATA[java.lang.Comparable]]></odp>
		<odp><![CDATA[java.util.RandomAccess]]></odp>
		<odp><![CDATA[java.io.Serializable]]></odp>
        <poprawne>3</poprawne>
    </pyt>
        <pyt>
        <nr>14</nr>
        <tresc><![CDATA[What is the return type of the method add(Object o) defined by the Set interface, and what does it indicate?]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>6</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[It returns an int representing the hash code of the newly added object]]></odp>
		<odp><![CDATA[It returns an Integer object representing the hash code of the newly added object]]></odp>
		<odp><![CDATA[It returns a boolean value, which is true if this set already contains the specified element]]></odp>
		<odp><![CDATA[It returns a boolean value, which is true if this set did not already contain specified element]]></odp>
		<odp><![CDATA[The return type is void. Any error in the add operation is reported by throwing an exception]]></odp>
		<odp>None of these</odp>
        <poprawne>4</poprawne>
    </pyt>
   <pyt>
        <nr>15</nr>
        <tresc><![CDATA[What is the result of compiling and running the following program?
        
        1. ArrayList<Double>a = new ArrayList<Double>();
        2. a.add(new Integer(4));
        3. System.out.println(a);
        ]]></tresc>
        <level>2</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[Compiler error at line 2]]></odp>
		<odp><![CDATA[ClassCastException at line 2]]></odp>
		<odp><![CDATA[Compiles and runs fine printing [4]]]></odp>
		<odp><![CDATA[Compiles and runs fine printing [4.0]]]></odp>
        <poprawne>1</poprawne>
    </pyt>
    <pyt>
        <nr>16</nr>
        <tresc><![CDATA[Which of the following statements are true about the following code?
        
        class Generics17{
			public static void main(String[] args){
				List<Object> list = new LinkedList<Object>();
		        list.add("A");
		        addToList("B", list);
		        System.out.println(list);
			}
        
			static void addToList(Object o, List<]]><![CDATA[?> I) {
        		I.add(o);
        	}
        }
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[The code will compile if List&lt;?&gt; is replaced by List&lt;Object&gt;]]></odp>
		<odp><![CDATA[The code will compile if List&lt;Object&gt; is replaced by List&lt;String&gt;]]></odp>
		<odp><![CDATA[The code will compile if List&lt;Object&gt; is replaced by LinkedList&lt;Object&gt;]]></odp>
		<odp><![CDATA[The code compiles fine]]></odp>
        <poprawne>1</poprawne>
    </pyt>
    <pyt>
        <nr>17</nr>
        <tresc><![CDATA[Which of the following must be true for the following code?
        
        StringBuffer s1 = new StringBuffer("test");
        StringBuffer s2 = s1;
        StringBuffer s3 = new StringBuffer("test");
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>3</liczba_poprawnych>
        <odp><![CDATA[s1.equals(s2)]]></odp>
		<odp><![CDATA[s1==s2]]></odp>
		<odp><![CDATA[s1.hashCode()==s2.hashCode()]]></odp>
		<odp><![CDATA[s3==s1]]></odp>
		<odp><![CDATA[s3.hashCode()==s1.hashCode()]]></odp>
        <poprawne>1,2,3</poprawne>
    </pyt>
    <pyt>
        <nr>18</nr>
        <tresc><![CDATA[Which of the following are the correct and appropriate implementations of the hashCode() method that can be inserted at line 20 in the following code so that the code compiles correctly and the general contracts of the equal and hashCode methods are observed?
        
	1.	public class CorrectHashCode
	2.	{
	3.		private int number;
	4.		transient int data;
	5.		public CorrectHashCode(int i)
	6.		{
	7.			number = i;
	8.		}
	9.
	10.		public boolean equals(Object obj)
	11.		{
	12.			if (obj != null && obj.getClass().equals(this.getClass()))
	13.			{
	14.				return 
	15.				(number == ((CorrectHashCode)obj).number)
	16.			}
	17.			return false;
	18.		}
	19.
	20.		// which implementation of hashCode should be inserted here
	21.	}        
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp><![CDATA[public int hashCode()
        {
        	Integer num = new Integer(number);
        	return num.hashCode();
        }
        ]]></odp>
		<odp><![CDATA[public int hashCode()
        {
        	int i = (int)(Math.random() * 100);
        	return i * number;
        }
        ]]></odp>
		<odp><![CDATA[public int hashCode()
        {
        	return number;
        }
        ]]></odp>
		<odp><![CDATA[public long hashCode()
        {
        	Integer num = new Integer(number);
        	return num.hashCode();
        }
        ]]></odp>
		<odp><![CDATA[public int hashCode()
        {
        	return data * number;
        }
        ]]></odp>
        <poprawne>1,3</poprawne>
    </pyt>
    <pyt>
        <nr>19</nr>
        <tresc><![CDATA[A particular class has no data members to define its state, i.e. it has no instance variables; it only provides services through methods. How would you implement the equals() and hashCode() methods for this class?]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
		<odp><![CDATA[The hashCode() method will return a constant integer and equals() will return true if another object is of the same type]]></odp>
		<odp><![CDATA[The hashCode() will return 0 and equals() will always return false]]></odp>
		<odp><![CDATA[The hashCode() will return 1 and equals() will always return true]]></odp>
		<odp><![CDATA[It is not necessery to override the equals() and hashCode() methods for such a class]]></odp>
        <poprawne>4</poprawne>
    </pyt>
        <pyt>
        <nr>20</nr>
        <tresc><![CDATA[What will happen when you attempt to compile and run the following code?
        
        public final class EqualsDemo
        {
        	private String str;
        	public EqualsDemo(String s)
        	{
        		str = s;
        	}
        	public boolean equals(EqualsDemo obj) 
        	{
        		if (!(obj instanceof EqualsDemo))
        			return false;
        		EqualsDemo ed = (EqualsDemo)obj;
        		return (str == ed.str || (str != null && str.equals(ed.str)));
        	}
        	public static void main(String[] args) 
        	{
        		EqualsDemo demo1 = new EqualsDemo("Java");
        		EqualsDemo demo2 = new EqualsDemo("java");
        		System.out.println(demo1.equals(demo2));
        	}
        }
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
		<odp><![CDATA[It will print - true]]></odp>
		<odp><![CDATA[It will print - false]]></odp>
		<odp><![CDATA[Compilation error]]></odp>
		<odp><![CDATA[Exception]]></odp>
        <poprawne>2</poprawne>
    </pyt>
    <pyt>
        <nr>21</nr>
        <tresc><![CDATA[Which of these will compile and run correctly?]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>4</liczba_odpowiedzi>
        <liczba_poprawnych>2</liczba_poprawnych>
        <odp><![CDATA[List<?> I = new Vector<String>();]]></odp>
		<odp><![CDATA[Map&lt;? extends Number, ? extends Number&gt; m1 = new HashMap&lt;Integer, Float&gt;();]]></odp>
		<odp><![CDATA[Map&lt;String, String&gt; m2 = new Map&lt;String, String&gt;();]]></odp>
		<odp><![CDATA[Set&lt;String&gt; s = new LinkedHashSet&lt;String&gt;;]]></odp>
        <poprawne>1,2</poprawne>
    </pyt>
    <pyt>
        <nr>22</nr>
        <tresc><![CDATA[Which of the following are legal?]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>5</liczba_odpowiedzi>
        <liczba_poprawnych>3</liczba_poprawnych>
        <odp><![CDATA[for (Map.Entry pairs : map.entrySet()){}]]></odp>
		<odp><![CDATA[Iterator i = map.entrySet().iterator();]]></odp>
		<odp><![CDATA[Iterator i = map.iterator();]]></odp>
		<odp><![CDATA[Iterator&lt;Map.Entry&lt;Integer, String&gt;&gt; i=map.entrySet().iterator();]]></odp>
		<odp><![CDATA[Iterator&lt;Map.Entry&gt; i= map.entrySet().iterator();]]></odp>
        <poprawne>1,2,4</poprawne>
    </pyt>
    <pyt>
        <nr>23</nr>
        <tresc><![CDATA[What is the result of compiling and running the given code?
        
        import java.util.*;
        public class Sorter{
        	public static void main(String[] args){
        		ArrayList<String> aList = new ArrayList<String>();
        		aList.add("USA");
        		aList.add("Russia");
        		aList.add("UK");
        		int pos = Collections.binarySearch(aList, "Russia");
        		System.out.println(pos);
        	}
        }
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>6</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[0]]></odp>
		<odp><![CDATA[1]]></odp>
		<odp><![CDATA[2]]></odp>
		<odp><![CDATA[Compiler error]]></odp>
		<odp><![CDATA[Exception at runtime]]></odp>
		<odp><![CDATA[Compiles correctly, output is undefined]]></odp>
        <poprawne>6</poprawne>
    </pyt>
        <pyt>
        <nr>24</nr>
        <tresc><![CDATA[What is the result of compiling and running the given code?
        
        Vector<String> aList = new Vector<String>();	//line 1
        aList.add("USA");		//line 2
        aList.add("Russia");		//line 3
        aList.add("USA");		//line 4
        aList.add("UK");		//line 5
        List<? extends Object> I = aList;	//line 6
        aList.sort();			//line 7
        for (Object s : I)
        	System.out.print(s);
        ]]></tresc>
        <level>3</level>
        <liczba_odpowiedzi>7</liczba_odpowiedzi>
        <liczba_poprawnych>1</liczba_poprawnych>
        <odp><![CDATA[]]>Compiler error at line 1</odp>
        <odp><![CDATA[]]>Compiler error at line 4</odp>
        <odp><![CDATA[]]>Compiler error at line 6</odp>
		<odp><![CDATA[]]>Compiles correctly and prints "USARussiaUSAUK"</odp>
		<odp><![CDATA[]]>Compiles correctly and prints "RussiaUKUSAUSA"</odp>
		<odp><![CDATA[]]>Compiles correctly and prints "RussiaUKUSA"</odp>
		<odp><![CDATA[]]>None of these</odp>
        <poprawne>7</poprawne>
    </pyt>
</obj>
